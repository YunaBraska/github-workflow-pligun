name: 🧪 tests

on:
  workflow_call:
    inputs:
      mask-experimental:
        type: boolean
        default: true
        description: Always report experimental test as successful
      ui-tests:
        type: boolean
        default: false
        description: Run UI-tests

permissions: {}

jobs:

  # Run Gradle Wrapper Validation Action to verify the wrapper's checksum
  # Run verifyPlugin, IntelliJ Plugin Verifier, and test Gradle tasks
  # Build plugin and provide the artifact for the next workflow jobs
  build:
    name: 🛠️ Build ${{ matrix.platform-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform-version: [ "2023.1", "2023.2", "2023.3", "2024.1" ]
    env:
      ORG_GRADLE_PROJECT_platformVersion: ${{ matrix.platform-version }}
    steps:
      - uses: actions/checkout@v4
      # TODO: Move this to a pre-commit check
      - uses: gradle/wrapper-validation-action@v2
      - uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 17
      # Build plugin
      - name: Build plugin
        run: ./gradlew buildPlugin

      - uses: actions/upload-artifact@v4
        with:
          name: build-artifact-${{ matrix.platform-version }}
          path: ./build/distributions/*

  test:
    name: 🧪 Test ${{ matrix.platform-version }}
    needs: [ build ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform-version: [ "2023.1", "2023.2", "2023.3", "2024.1" ]
    env:
      ORG_GRADLE_PROJECT_platformVersion: ${{ matrix.platform-version }}
    steps:
      - uses: actions/checkout@v4
      # TODO: Move this to a pre-commit check
      - uses: gradle/wrapper-validation-action@v2
      - uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 17

      # Run tests
      - name: Run Tests
        run: ./gradlew check

      # Collect Tests Result of failed tests
      - name: Collect Tests Result
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: tests-result-${{ matrix.platform-version }}
          path: ${{ github.workspace }}/build/reports/tests

      # Upload Kover report to CodeCov
      - name: Upload Code Coverage Report
        uses: codecov/codecov-action@v3
        with:
          files: ${{ github.workspace }}/build/reports/kover/xml/report.xml

  verify:
    name: 🧪 Verify ${{ matrix.platform-version }}
    needs: [ build ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform-version: [ "2023.1", "2023.2", "2023.3", "2024.1" ]
    env:
      ORG_GRADLE_PROJECT_platformVersion: ${{ matrix.platform-version }}
    steps:
      - uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          large-packages: false

      - uses: actions/checkout@v4
      # Set environment variables
      - name: Export Properties
        id: properties
        shell: bash
        run: |
          PROPERTIES="$(./gradlew properties --console=plain -q)"
          VERSION="$(echo "$PROPERTIES" | grep "^version:" | cut -f2- -d ' ')"
          CHANGELOG="$(./gradlew getChangelog --unreleased --no-header --console=plain -q)"
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "pluginVerifierHomeDir=~/.pluginVerifier" >> $GITHUB_OUTPUT
          
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          ./gradlew listProductsReleases # prepare list of IDEs for Plugin Verifier
      - uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 17
      # Cache Plugin Verifier IDEs
      - name: Setup Plugin Verifier IDEs Cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.properties.outputs.pluginVerifierHomeDir }}/ides
          key: plugin-verifier-${{ hashFiles('build/listProductsReleases.txt') }}

      # Run Verify Plugin task and IntelliJ Plugin Verifier tool
      - name: Run Plugin Verification tasks
        run: ./gradlew runPluginVerifier -Dplugin.verifier.home.dir=${{ steps.properties.outputs.pluginVerifierHomeDir }}

      # Collect Plugin Verifier Result
      - name: Collect Plugin Verifier Result
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: pluginVerifier-result-${{ matrix.platform-version }}
          path: ${{ github.workspace }}/build/reports/pluginVerifier

  testUI:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            runIde: |
              export DISPLAY=:99.0
              Xvfb -ac :99 -screen 0 1920x1080x16 &
              gradle runIdeForUiTests &
          - os: windows-latest
            runIde: start gradlew.bat runIdeForUiTests
          - os: macos-latest
            runIde: ./gradlew runIdeForUiTests &
    if: ${{ inputs.ui-tests }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 17

      # Run IDEA prepared for UI testing
      - name: Run IDE
        run: ${{ matrix.runIde }}

      # Wait for IDEA to be started
      - name: Health Check
        uses: jtalk/url-health-check-action@v3
        with:
          url: http://127.0.0.1:8082
          max-attempts: 15
          retry-delay: 30s

      # Run tests
      - name: Tests
        run: ./gradlew test
